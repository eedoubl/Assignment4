{"ast":null,"code":"var _jsxFileName = \"/Users/eedoubl/info655-em879/src/components/PlaylistPt2.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport ShuffleButton from './shuffle';\nimport PlayPauseButton from './playpause';\nimport PrevButton from './prev';\nimport NextButton from './next';\nimport Status from './status';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaylistPt2 = () => {\n  _s();\n  const [playlist, setPlaylist] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [status, setStatus] = useState('');\n  useEffect(() => {\n    const fetchAudioTracks = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/tracks');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setPlaylist(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchAudioTracks();\n  }, []);\n  const handleShuffle = () => {\n    const shuffledPlaylist = shuffleArray([...playlist]);\n    setPlaylist(shuffledPlaylist);\n    setCurrentTrackIndex(0);\n  };\n  const handlePlayPause = () => {\n    setIsPlaying(!isPlaying);\n    if (status.includes('Playing')) {\n      setStatus('Paused');\n    } else if (playlist[currentTrackIndex].episodeTitle) {\n      setStatus(`Playing: ${playlist[currentTrackIndex].episodeTitle}`);\n    } else {\n      setStatus(`Playing: ${playlist[currentTrackIndex].title}`);\n    }\n  };\n  const handlePrevTrack = () => {\n    setCurrentTrackIndex(prevIndex => prevIndex === 0 ? playlist.length - 1 : prevIndex - 1);\n    if (playlist[currentTrackIndex].episodeTitle) {\n      setStatus(`Playing: ${playlist[currentTrackIndex].episodeTitle}`);\n    } else {\n      setStatus(`Playing: ${playlist[currentTrackIndex].title}`);\n    }\n  };\n  const handleNextTrack = () => {\n    setCurrentTrackIndex(prevIndex => prevIndex === playlist.length - 1 ? 0 : prevIndex + 1);\n    if (playlist[currentTrackIndex].episodeTitle) {\n      setStatus(`Playing: ${playlist[currentTrackIndex].episodeTitle}`);\n    } else {\n      setStatus(`Playing: ${playlist[currentTrackIndex].title}`);\n    }\n  };\n  const handleDoubleClick = (title, episodeTitle) => {\n    if (episodeTitle) {\n      setStatus(`Playing: ${episodeTitle}`);\n    } else {\n      setStatus(`Playing: ${title}`);\n    }\n  };\n  const getPlayingTrack = () => {\n    return playlist[currentTrackIndex];\n  };\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-controls\",\n      children: [/*#__PURE__*/_jsxDEV(ShuffleButton, {\n        onClick: handleShuffle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayPauseButton, {\n        isPlaying: isPlaying,\n        onClick: handlePlayPause\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrevButton, {\n        onClick: handlePrevTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        onClick: handleNextTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Status, {\n      status: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shuffled-playlist\",\n      children: playlist.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"insert\",\n        style: {\n          padding: '1px',\n          backgroundColor: index === currentTrackIndex ? '#ccc' : 'transparent'\n        },\n        onDoubleClick: () => handleDoubleClick(item.title, item.episodeTitle),\n        children: [item.title && item.artist && item.year && /*#__PURE__*/_jsxDEV(Song, {\n          title: item.title,\n          artist: item.artist,\n          year: item.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }, this), item.episode && item.episodeTitle && /*#__PURE__*/_jsxDEV(Podcast, {\n          episode: item.episode,\n          episodeTitle: item.episodeTitle,\n          season: item.season\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 3\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaylistPt2, \"T1FkNW7uXZGas4NbeHh/OpKsvbY=\");\n_c = PlaylistPt2;\nexport default PlaylistPt2;\nvar _c;\n$RefreshReg$(_c, \"PlaylistPt2\");","map":{"version":3,"names":["React","useEffect","useState","Song","Podcast","ShuffleButton","PlayPauseButton","PrevButton","NextButton","Status","jsxDEV","_jsxDEV","PlaylistPt2","_s","playlist","setPlaylist","currentTrackIndex","setCurrentTrackIndex","isPlaying","setIsPlaying","status","setStatus","fetchAudioTracks","response","fetch","ok","Error","data","json","error","console","handleShuffle","shuffledPlaylist","shuffleArray","handlePlayPause","includes","episodeTitle","title","handlePrevTrack","prevIndex","length","handleNextTrack","handleDoubleClick","getPlayingTrack","array","i","j","Math","floor","random","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","item","index","style","padding","backgroundColor","onDoubleClick","artist","year","episode","season","_c","$RefreshReg$"],"sources":["/Users/eedoubl/info655-em879/src/components/PlaylistPt2.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport ShuffleButton from './shuffle';\nimport PlayPauseButton from './playpause';\nimport PrevButton from './prev';\nimport NextButton from './next';\nimport Status from './status';\nimport '../App.css';\n\nconst PlaylistPt2 = () => {\n  const [playlist, setPlaylist] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [status, setStatus] = useState('');\n\n  useEffect(() => {\n    const fetchAudioTracks = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/tracks');\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        const data = await response.json();\n        setPlaylist(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchAudioTracks();\n  }, []);\n\n  const handleShuffle = () => {\n    const shuffledPlaylist = shuffleArray([...playlist]);\n    setPlaylist(shuffledPlaylist);\n    setCurrentTrackIndex(0);\n  };\n\n  const handlePlayPause = () => {\n    setIsPlaying(!isPlaying);\n    if (status.includes('Playing')) {\n      setStatus('Paused');\n    } else if (playlist[currentTrackIndex].episodeTitle) {\n      setStatus(`Playing: ${playlist[currentTrackIndex].episodeTitle}`);\n    } else {\n      setStatus(`Playing: ${playlist[currentTrackIndex].title}`);\n    }\n  };\n  \n  const handlePrevTrack = () => {\n    setCurrentTrackIndex((prevIndex) => (prevIndex === 0 ? playlist.length - 1 : prevIndex - 1));\n    if (playlist[currentTrackIndex].episodeTitle) {\n      setStatus(`Playing: ${playlist[currentTrackIndex].episodeTitle}`);\n    } else {\n      setStatus(`Playing: ${playlist[currentTrackIndex].title}`);\n    }\n  };\n  \n  const handleNextTrack = () => {\n    setCurrentTrackIndex((prevIndex) => (prevIndex === playlist.length - 1 ? 0 : prevIndex + 1));\n    if (playlist[currentTrackIndex].episodeTitle) {\n      setStatus(`Playing: ${playlist[currentTrackIndex].episodeTitle}`);\n    } else {\n      setStatus(`Playing: ${playlist[currentTrackIndex].title}`);\n    }\n  };\n  \n\n  const handleDoubleClick = (title, episodeTitle) => {\n    if (episodeTitle) {\n      setStatus(`Playing: ${episodeTitle}`);\n    } else {\n      setStatus(`Playing: ${title}`);\n    }\n  };\n  \n  const getPlayingTrack = () => {\n    return playlist[currentTrackIndex];\n  };\n\n  const shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n  return (\n    <div>\n      <h2>Playlist</h2>\n      <div className=\"player-controls\">\n        <ShuffleButton onClick={handleShuffle} />\n        <PlayPauseButton isPlaying={isPlaying} onClick={handlePlayPause} />\n        <PrevButton onClick={handlePrevTrack} />\n        <NextButton onClick={handleNextTrack} />\n      </div>\n      <Status status={status} /> {}\n      <div className=\"shuffled-playlist\">\n      {playlist.map((item, index) => (\n  <div\n    key={index}\n    className=\"insert\"\n    style={{ padding: '1px', backgroundColor: index === currentTrackIndex ? '#ccc' : 'transparent' }}\n    onDoubleClick={() => handleDoubleClick(item.title, item.episodeTitle)}\n  >\n    {item.title && item.artist && item.year && (\n      <Song title={item.title} artist={item.artist} year={item.year} />\n    )}\n    {item.episode && item.episodeTitle && (\n      <Podcast\n        episode={item.episode}\n        episodeTitle={item.episodeTitle}\n        season={item.season}\n      />\n    )}\n  </div>\n))}\n\n      </div>\n    </div>\n  );\n};\n\nexport default PlaylistPt2;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}